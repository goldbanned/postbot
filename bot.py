import warnings #—á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
from random import randint as ran #—Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä
from selenium import webdriver #—Å–∞–º selenium
from time import sleep #–æ–∂–∏–¥–∞–Ω–∏–µ
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import datetime
import os
bot = Bot(token='5057146163:AAGKhrdpYLTae6VqranqRt0zvZMHimAV1O4')
dp = Dispatcher(bot)
channel_id = '-1001547411552'
today = datetime.datetime.today()


async def process_start_command(message: types.Message):
    #await bot.send_message(channel_id, 'Parser csgorun.gg by @gold_banned')
    
    warnings.filterwarnings("ignore") #—á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    from selenium.webdriver.firefox.options import Options #–¥–æ–ø —Ñ—É–Ω–∫—Ü–∏–∏
    
    options = webdriver.ChromeOptions() #–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    options.add_argument('--headless') #–Ω–µ–≤–∏–¥–∏–º–æ–µ –æ–∫–Ω–æ (–º–æ–∂–µ—à—å —É–±—Ä–∞—Ç—å, —Ç–∞–∫ —Ç—ã –±—É–¥–µ—à—å –≤–∏–¥–µ—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã)
    #driver = webdriver.Firefox(options=options, executable_path=r"geckodriver.exe") #–ø—Ä–æ–≥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ firefox–∞
    options.binary_location = os.environ.get('GOOGLE_CHROME_SHIM', None)
    driver = webdriver.Chrome(options=options, executable_path="chromedriver") #–ø—Ä–æ–≥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ chrom–∞
    driver.get('https://csgorun.gg') #–∑–∞–ø—É—Å–∫ —Å–∞–π—Ç–∞
    last_game = '' #–ø–æ—Å–ª–µ–¥–Ω–∏–π –∫—Ñ
    driver.find_element_by_class_name("switcher__content").click() #–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 18 –ª–µ—Ç
    while True: #–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        offset = datetime.timedelta(hours=3)
        today = datetime.datetime.now(datetime.timezone(offset, name='–ú–°–ö'))
        if driver.find_element_by_class_name("graph-label").text[:-2] != last_game: #–µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –∏–≥—Ä–∞ –Ω–µ —Ä–∞–≤–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–≥—Ä–æ–π —Ç–æ
            if driver.find_element_by_class_name("graph-label").get_attribute('style')[23:-1] == "2B3D6D":
                await bot.send_message(channel_id,'üîµ ' + driver.find_element_by_class_name("graph-label").text + ' '+ str(today.strftime("%H:%M:%S %d.%m.%Y")) + r" #B")
            if driver.find_element_by_class_name("graph-label").get_attribute('style')[23:-1] == "4e2d6a":
                await bot.send_message(channel_id, "üü£ " + driver.find_element_by_class_name("graph-label").text + ' '+ str(today.strftime("%H:%M:%S %d.%m.%Y")) + r" #P")
            if driver.find_element_by_class_name("graph-label").get_attribute('style')[23:-1] == "492a49":
                await bot.send_message(channel_id, "üî¥ " + driver.find_element_by_class_name("graph-label").text + ' '+ str(today.strftime("%H:%M:%S %d.%m.%Y")) + r" #R")
            if driver.find_element_by_class_name("graph-label").get_attribute('style')[23:-1] == "255559":
                await bot.send_message(channel_id, "üü¢ " + driver.find_element_by_class_name("graph-label").text + ' '+ str(today.strftime("%H:%M:%S %d.%m.%Y")) + r" #G")
            if driver.find_element_by_class_name("graph-label").get_attribute('style')[23:-1] == "007c91":
                await bot.send_message(channel_id, "üíé " + driver.find_element_by_class_name("graph-label").text + ' '+ str(today.strftime("%H:%M:%S %d.%m.%Y")) + r" #S")
            if driver.find_element_by_class_name("graph-label").get_attribute('style')[23:-1] == "4e3b4b":
                await bot.send_message(channel_id, "üü° " + driver.find_element_by_class_name("graph-label").text + ' '+ str(today.strftime("%H:%M:%S %d.%m.%Y")) + r" #Y")
           
            
            last_game = driver.find_element_by_class_name("graph-label").text[:-2] #–∑–∞–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä–æ–π —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞–ª –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True, on_startup=process_start_command)
